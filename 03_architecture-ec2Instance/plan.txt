
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # module.networking.aws_db_subnet_group.mysubnetgroup will be created
  + resource "aws_db_subnet_group" "mysubnetgroup" {
      + arn         = (known after apply)
      + description = "Managed by Terraform"
      + id          = (known after apply)
      + name        = "mysubnet-group-dev"
      + name_prefix = (known after apply)
      + subnet_ids  = (known after apply)
      + tags        = {
          + "Environment" = "dev"
        }
      + tags_all    = {
          + "Environment" = "dev"
        }
    }

  # module.networking.aws_eip.nat_eip[0] will be created
  + resource "aws_eip" "nat_eip" {
      + allocation_id        = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = (known after apply)
      + id                   = (known after apply)
      + instance             = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags                 = {
          + "Environment" = "dev"
          + "Name"        = "dev-us-west-2a-eip"
        }
      + tags_all             = {
          + "Environment" = "dev"
          + "Name"        = "dev-us-west-2a-eip"
        }
      + vpc                  = true
    }

  # module.networking.aws_eip.nat_eip[1] will be created
  + resource "aws_eip" "nat_eip" {
      + allocation_id        = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = (known after apply)
      + id                   = (known after apply)
      + instance             = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags                 = {
          + "Environment" = "dev"
          + "Name"        = "dev-us-west-2b-eip"
        }
      + tags_all             = {
          + "Environment" = "dev"
          + "Name"        = "dev-us-west-2b-eip"
        }
      + vpc                  = true
    }

  # module.networking.aws_internet_gateway.ig will be created
  + resource "aws_internet_gateway" "ig" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Environment" = "dev"
          + "Name"        = "dev-igw"
        }
      + tags_all = {
          + "Environment" = "dev"
          + "Name"        = "dev-igw"
        }
      + vpc_id   = (known after apply)
    }

  # module.networking.aws_nat_gateway.nat[0] will be created
  + resource "aws_nat_gateway" "nat" {
      + allocation_id        = (known after apply)
      + connectivity_type    = "public"
      + id                   = (known after apply)
      + network_interface_id = (known after apply)
      + private_ip           = (known after apply)
      + public_ip            = (known after apply)
      + subnet_id            = (known after apply)
      + tags                 = {
          + "Environment" = "dev"
          + "Name"        = "dev-us-west-2a-nat"
        }
      + tags_all             = {
          + "Environment" = "dev"
          + "Name"        = "dev-us-west-2a-nat"
        }
    }

  # module.networking.aws_nat_gateway.nat[1] will be created
  + resource "aws_nat_gateway" "nat" {
      + allocation_id        = (known after apply)
      + connectivity_type    = "public"
      + id                   = (known after apply)
      + network_interface_id = (known after apply)
      + private_ip           = (known after apply)
      + public_ip            = (known after apply)
      + subnet_id            = (known after apply)
      + tags                 = {
          + "Environment" = "dev"
          + "Name"        = "dev-us-west-2b-nat"
        }
      + tags_all             = {
          + "Environment" = "dev"
          + "Name"        = "dev-us-west-2b-nat"
        }
    }

  # module.networking.aws_route.private_nat_gateway[0] will be created
  + resource "aws_route" "private_nat_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + nat_gateway_id         = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)
    }

  # module.networking.aws_route.private_nat_gateway[1] will be created
  + resource "aws_route" "private_nat_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + nat_gateway_id         = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)
    }

  # module.networking.aws_route.public_internet_gateway[0] will be created
  + resource "aws_route" "public_internet_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + gateway_id             = (known after apply)
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)
    }

  # module.networking.aws_route.public_internet_gateway[1] will be created
  + resource "aws_route" "public_internet_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + gateway_id             = (known after apply)
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)
    }

  # module.networking.aws_route_table.private[0] will be created
  + resource "aws_route_table" "private" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Environment" = "dev"
          + "Name"        = "dev-private-route-table"
        }
      + tags_all         = {
          + "Environment" = "dev"
          + "Name"        = "dev-private-route-table"
        }
      + vpc_id           = (known after apply)
    }

  # module.networking.aws_route_table.private[1] will be created
  + resource "aws_route_table" "private" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Environment" = "dev"
          + "Name"        = "dev-private-route-table"
        }
      + tags_all         = {
          + "Environment" = "dev"
          + "Name"        = "dev-private-route-table"
        }
      + vpc_id           = (known after apply)
    }

  # module.networking.aws_route_table.private_db[0] will be created
  + resource "aws_route_table" "private_db" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Environment" = "dev"
          + "Name"        = "dev-private-route-table-db"
        }
      + tags_all         = {
          + "Environment" = "dev"
          + "Name"        = "dev-private-route-table-db"
        }
      + vpc_id           = (known after apply)
    }

  # module.networking.aws_route_table.private_db[1] will be created
  + resource "aws_route_table" "private_db" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Environment" = "dev"
          + "Name"        = "dev-private-route-table-db"
        }
      + tags_all         = {
          + "Environment" = "dev"
          + "Name"        = "dev-private-route-table-db"
        }
      + vpc_id           = (known after apply)
    }

  # module.networking.aws_route_table.public[0] will be created
  + resource "aws_route_table" "public" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Environment" = "dev"
          + "Name"        = "dev-public-route-table"
        }
      + tags_all         = {
          + "Environment" = "dev"
          + "Name"        = "dev-public-route-table"
        }
      + vpc_id           = (known after apply)
    }

  # module.networking.aws_route_table.public[1] will be created
  + resource "aws_route_table" "public" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Environment" = "dev"
          + "Name"        = "dev-public-route-table"
        }
      + tags_all         = {
          + "Environment" = "dev"
          + "Name"        = "dev-public-route-table"
        }
      + vpc_id           = (known after apply)
    }

  # module.networking.aws_route_table_association.private[0] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.networking.aws_route_table_association.private[1] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.networking.aws_route_table_association.private_db[0] will be created
  + resource "aws_route_table_association" "private_db" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.networking.aws_route_table_association.private_db[1] will be created
  + resource "aws_route_table_association" "private_db" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.networking.aws_route_table_association.public[0] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.networking.aws_route_table_association.public[1] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.networking.aws_subnet.private_subnet[0] will be created
  + resource "aws_subnet" "private_subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-2a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.2.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Environment" = "dev"
          + "Name"        = "dev-us-west-2a-private-subnet"
        }
      + tags_all                                       = {
          + "Environment" = "dev"
          + "Name"        = "dev-us-west-2a-private-subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.networking.aws_subnet.private_subnet[1] will be created
  + resource "aws_subnet" "private_subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-2b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.3.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Environment" = "dev"
          + "Name"        = "dev-us-west-2b-private-subnet"
        }
      + tags_all                                       = {
          + "Environment" = "dev"
          + "Name"        = "dev-us-west-2b-private-subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.networking.aws_subnet.private_subnet_db[0] will be created
  + resource "aws_subnet" "private_subnet_db" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-2a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.4.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Environment" = "dev"
          + "Name"        = "dev-us-west-2a-private-db-subnet"
        }
      + tags_all                                       = {
          + "Environment" = "dev"
          + "Name"        = "dev-us-west-2a-private-db-subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.networking.aws_subnet.private_subnet_db[1] will be created
  + resource "aws_subnet" "private_subnet_db" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-2b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.5.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Environment" = "dev"
          + "Name"        = "dev-us-west-2b-private-db-subnet"
        }
      + tags_all                                       = {
          + "Environment" = "dev"
          + "Name"        = "dev-us-west-2b-private-db-subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.networking.aws_subnet.public_subnet[0] will be created
  + resource "aws_subnet" "public_subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-2a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.0.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Environment" = "dev"
          + "Name"        = "dev-us-west-2a-public-subnet"
        }
      + tags_all                                       = {
          + "Environment" = "dev"
          + "Name"        = "dev-us-west-2a-public-subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.networking.aws_subnet.public_subnet[1] will be created
  + resource "aws_subnet" "public_subnet" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-2b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = true
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Environment" = "dev"
          + "Name"        = "dev-us-west-2b-public-subnet"
        }
      + tags_all                                       = {
          + "Environment" = "dev"
          + "Name"        = "dev-us-west-2b-public-subnet"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.networking.aws_vpc.vpc will be created
  + resource "aws_vpc" "vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = true
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Environment" = "dev"
          + "Name"        = "dev-vpc"
        }
      + tags_all                             = {
          + "Environment" = "dev"
          + "Name"        = "dev-vpc"
        }
    }

Plan: 29 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + aws_db_subnet_group = {
      + arn         = (known after apply)
      + description = "Managed by Terraform"
      + id          = (known after apply)
      + name        = "mysubnet-group-dev"
      + name_prefix = (known after apply)
      + subnet_ids  = (known after apply)
      + tags        = {
          + "Environment" = "dev"
        }
      + tags_all    = {
          + "Environment" = "dev"
        }
    }
  + eip                 = [
      + {
          + address                   = null
          + allocation_id             = (known after apply)
          + associate_with_private_ip = null
          + association_id            = (known after apply)
          + carrier_ip                = (known after apply)
          + customer_owned_ip         = (known after apply)
          + customer_owned_ipv4_pool  = null
          + domain                    = (known after apply)
          + id                        = (known after apply)
          + instance                  = (known after apply)
          + network_border_group      = (known after apply)
          + network_interface         = (known after apply)
          + private_dns               = (known after apply)
          + private_ip                = (known after apply)
          + public_dns                = (known after apply)
          + public_ip                 = (known after apply)
          + public_ipv4_pool          = (known after apply)
          + tags                      = {
              + "Environment" = "dev"
              + "Name"        = "dev-us-west-2a-eip"
            }
          + tags_all                  = {
              + "Environment" = "dev"
              + "Name"        = "dev-us-west-2a-eip"
            }
          + timeouts                  = null
          + vpc                       = true
        },
      + {
          + address                   = null
          + allocation_id             = (known after apply)
          + associate_with_private_ip = null
          + association_id            = (known after apply)
          + carrier_ip                = (known after apply)
          + customer_owned_ip         = (known after apply)
          + customer_owned_ipv4_pool  = null
          + domain                    = (known after apply)
          + id                        = (known after apply)
          + instance                  = (known after apply)
          + network_border_group      = (known after apply)
          + network_interface         = (known after apply)
          + private_dns               = (known after apply)
          + private_ip                = (known after apply)
          + public_dns                = (known after apply)
          + public_ip                 = (known after apply)
          + public_ipv4_pool          = (known after apply)
          + tags                      = {
              + "Environment" = "dev"
              + "Name"        = "dev-us-west-2b-eip"
            }
          + tags_all                  = {
              + "Environment" = "dev"
              + "Name"        = "dev-us-west-2b-eip"
            }
          + timeouts                  = null
          + vpc                       = true
        },
    ]
  + internet-gw         = {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Environment" = "dev"
          + "Name"        = "dev-igw"
        }
      + tags_all = {
          + "Environment" = "dev"
          + "Name"        = "dev-igw"
        }
      + vpc_id   = (known after apply)
    }
  + nat_gateway         = [
      + {
          + allocation_id        = (known after apply)
          + connectivity_type    = "public"
          + id                   = (known after apply)
          + network_interface_id = (known after apply)
          + private_ip           = (known after apply)
          + public_ip            = (known after apply)
          + subnet_id            = (known after apply)
          + tags                 = {
              + "Environment" = "dev"
              + "Name"        = "dev-us-west-2a-nat"
            }
          + tags_all             = {
              + "Environment" = "dev"
              + "Name"        = "dev-us-west-2a-nat"
            }
        },
      + {
          + allocation_id        = (known after apply)
          + connectivity_type    = "public"
          + id                   = (known after apply)
          + network_interface_id = (known after apply)
          + private_ip           = (known after apply)
          + public_ip            = (known after apply)
          + subnet_id            = (known after apply)
          + tags                 = {
              + "Environment" = "dev"
              + "Name"        = "dev-us-west-2b-nat"
            }
          + tags_all             = {
              + "Environment" = "dev"
              + "Name"        = "dev-us-west-2b-nat"
            }
        },
    ]
  + private_subnet      = [
      + {
          + arn                                            = (known after apply)
          + assign_ipv6_address_on_creation                = false
          + availability_zone                              = "us-west-2a"
          + availability_zone_id                           = (known after apply)
          + cidr_block                                     = "10.0.2.0/24"
          + customer_owned_ipv4_pool                       = null
          + enable_dns64                                   = false
          + enable_resource_name_dns_a_record_on_launch    = false
          + enable_resource_name_dns_aaaa_record_on_launch = false
          + id                                             = (known after apply)
          + ipv6_cidr_block                                = null
          + ipv6_cidr_block_association_id                 = (known after apply)
          + ipv6_native                                    = false
          + map_customer_owned_ip_on_launch                = null
          + map_public_ip_on_launch                        = false
          + outpost_arn                                    = null
          + owner_id                                       = (known after apply)
          + private_dns_hostname_type_on_launch            = (known after apply)
          + tags                                           = {
              + "Environment" = "dev"
              + "Name"        = "dev-us-west-2a-private-subnet"
            }
          + tags_all                                       = {
              + "Environment" = "dev"
              + "Name"        = "dev-us-west-2a-private-subnet"
            }
          + timeouts                                       = null
          + vpc_id                                         = (known after apply)
        },
      + {
          + arn                                            = (known after apply)
          + assign_ipv6_address_on_creation                = false
          + availability_zone                              = "us-west-2b"
          + availability_zone_id                           = (known after apply)
          + cidr_block                                     = "10.0.3.0/24"
          + customer_owned_ipv4_pool                       = null
          + enable_dns64                                   = false
          + enable_resource_name_dns_a_record_on_launch    = false
          + enable_resource_name_dns_aaaa_record_on_launch = false
          + id                                             = (known after apply)
          + ipv6_cidr_block                                = null
          + ipv6_cidr_block_association_id                 = (known after apply)
          + ipv6_native                                    = false
          + map_customer_owned_ip_on_launch                = null
          + map_public_ip_on_launch                        = false
          + outpost_arn                                    = null
          + owner_id                                       = (known after apply)
          + private_dns_hostname_type_on_launch            = (known after apply)
          + tags                                           = {
              + "Environment" = "dev"
              + "Name"        = "dev-us-west-2b-private-subnet"
            }
          + tags_all                                       = {
              + "Environment" = "dev"
              + "Name"        = "dev-us-west-2b-private-subnet"
            }
          + timeouts                                       = null
          + vpc_id                                         = (known after apply)
        },
    ]
  + public_subnet       = [
      + {
          + arn                                            = (known after apply)
          + assign_ipv6_address_on_creation                = false
          + availability_zone                              = "us-west-2a"
          + availability_zone_id                           = (known after apply)
          + cidr_block                                     = "10.0.0.0/24"
          + customer_owned_ipv4_pool                       = null
          + enable_dns64                                   = false
          + enable_resource_name_dns_a_record_on_launch    = false
          + enable_resource_name_dns_aaaa_record_on_launch = false
          + id                                             = (known after apply)
          + ipv6_cidr_block                                = null
          + ipv6_cidr_block_association_id                 = (known after apply)
          + ipv6_native                                    = false
          + map_customer_owned_ip_on_launch                = null
          + map_public_ip_on_launch                        = true
          + outpost_arn                                    = null
          + owner_id                                       = (known after apply)
          + private_dns_hostname_type_on_launch            = (known after apply)
          + tags                                           = {
              + "Environment" = "dev"
              + "Name"        = "dev-us-west-2a-public-subnet"
            }
          + tags_all                                       = {
              + "Environment" = "dev"
              + "Name"        = "dev-us-west-2a-public-subnet"
            }
          + timeouts                                       = null
          + vpc_id                                         = (known after apply)
        },
      + {
          + arn                                            = (known after apply)
          + assign_ipv6_address_on_creation                = false
          + availability_zone                              = "us-west-2b"
          + availability_zone_id                           = (known after apply)
          + cidr_block                                     = "10.0.1.0/24"
          + customer_owned_ipv4_pool                       = null
          + enable_dns64                                   = false
          + enable_resource_name_dns_a_record_on_launch    = false
          + enable_resource_name_dns_aaaa_record_on_launch = false
          + id                                             = (known after apply)
          + ipv6_cidr_block                                = null
          + ipv6_cidr_block_association_id                 = (known after apply)
          + ipv6_native                                    = false
          + map_customer_owned_ip_on_launch                = null
          + map_public_ip_on_launch                        = true
          + outpost_arn                                    = null
          + owner_id                                       = (known after apply)
          + private_dns_hostname_type_on_launch            = (known after apply)
          + tags                                           = {
              + "Environment" = "dev"
              + "Name"        = "dev-us-west-2b-public-subnet"
            }
          + tags_all                                       = {
              + "Environment" = "dev"
              + "Name"        = "dev-us-west-2b-public-subnet"
            }
          + timeouts                                       = null
          + vpc_id                                         = (known after apply)
        },
    ]
  + route_table_private = [
      + {
          + arn              = (known after apply)
          + id               = (known after apply)
          + owner_id         = (known after apply)
          + propagating_vgws = (known after apply)
          + route            = (known after apply)
          + tags             = {
              + "Environment" = "dev"
              + "Name"        = "dev-private-route-table"
            }
          + tags_all         = {
              + "Environment" = "dev"
              + "Name"        = "dev-private-route-table"
            }
          + timeouts         = null
          + vpc_id           = (known after apply)
        },
      + {
          + arn              = (known after apply)
          + id               = (known after apply)
          + owner_id         = (known after apply)
          + propagating_vgws = (known after apply)
          + route            = (known after apply)
          + tags             = {
              + "Environment" = "dev"
              + "Name"        = "dev-private-route-table"
            }
          + tags_all         = {
              + "Environment" = "dev"
              + "Name"        = "dev-private-route-table"
            }
          + timeouts         = null
          + vpc_id           = (known after apply)
        },
    ]
  + route_table_public  = [
      + {
          + arn              = (known after apply)
          + id               = (known after apply)
          + owner_id         = (known after apply)
          + propagating_vgws = (known after apply)
          + route            = (known after apply)
          + tags             = {
              + "Environment" = "dev"
              + "Name"        = "dev-public-route-table"
            }
          + tags_all         = {
              + "Environment" = "dev"
              + "Name"        = "dev-public-route-table"
            }
          + timeouts         = null
          + vpc_id           = (known after apply)
        },
      + {
          + arn              = (known after apply)
          + id               = (known after apply)
          + owner_id         = (known after apply)
          + propagating_vgws = (known after apply)
          + route            = (known after apply)
          + tags             = {
              + "Environment" = "dev"
              + "Name"        = "dev-public-route-table"
            }
          + tags_all         = {
              + "Environment" = "dev"
              + "Name"        = "dev-public-route-table"
            }
          + timeouts         = null
          + vpc_id           = (known after apply)
        },
    ]
  + vpc_id              = {
      + arn                                  = (known after apply)
      + assign_generated_ipv6_cidr_block     = null
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = true
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv4_ipam_pool_id                    = null
      + ipv4_netmask_length                  = null
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + ipv6_ipam_pool_id                    = null
      + ipv6_netmask_length                  = null
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Environment" = "dev"
          + "Name"        = "dev-vpc"
        }
      + tags_all                             = {
          + "Environment" = "dev"
          + "Name"        = "dev-vpc"
        }
    }

─────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
